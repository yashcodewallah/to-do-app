{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","InputArea","className","onChange","handleChange","type","name","value","inputText","addItem","App","useState","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","event","newValue","target","console","log","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"wNAceA,MAZf,SAAkBC,GAChB,OACE,yBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,MAGxB,4BAAKH,EAAMI,QCKFC,MAZf,SAAmBL,GAEjB,OACE,yBAAKM,UAAU,QACb,2BAAOC,SAAUP,EAAMQ,aAAcC,KAAK,OAAOC,KAAK,oBAAoBC,MAAOX,EAAMY,YACvF,4BAAQX,QAASD,EAAMa,SACrB,wCCgDOC,MApDf,WACE,MAAkCC,mBAAS,IAAG,mBAAvCH,EAAS,KAAEI,EAAY,KAC9B,EAA0BD,mBAAS,IAAG,mBAA/BE,EAAK,KAAEC,EAAQ,KAetB,SAASC,EAAWhB,GAClBe,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAKC,GAC5B,OAAOA,IAAUpB,QAKvB,OACE,yBAAKG,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAS,CACVE,aA3Be,SAACgB,GAClB,IAAMC,EAAWD,EAAME,OAAOf,MAC9BgB,QAAQC,IAAIH,GACZT,EAAaS,IAyBXb,UAAWA,EACXC,QAvBJ,WACEK,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAS,CAAER,OAExBI,EAAa,OAqBX,6BAEE,4BACGC,EAAMY,KAAI,SAACC,EAAUP,GAAK,OACzB,kBAAC,EAAQ,CACPQ,IAAKR,EACLpB,GAAIoB,EACJnB,KAAM0B,EACN5B,UAAWiB,WC3CzBa,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.a315b2cd.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React from \"react\";\n\nfunction InputArea(props) {\n\n  return (\n    <div className=\"form\">\n      <input onChange={props.handleChange} type=\"text\" name=\"enter your work!!\" value={props.inputText} />\n      <button onClick={props.addItem}>\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const handleChange=(event)=> {\n    const newValue = event.target.value;\n    console.log(newValue);\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems(prevItems => {\n      return prevItems.filter((item,index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea \n      handleChange={handleChange} \n      inputText={inputText} \n      addItem={addItem} \n      />\n      <div>\n\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: I have extracted the Input Area, including the <input> and\n//<button> elements into a seperate Component called InputArea.\n//Your job is to make the app work as it did before but this time with the\n//InputArea as a seperate Component.\n\n// DO NOT: Modify the ToDoItem.jsx\n// DO NOT: Move the input/button elements back into the App.jsx\n\n//Hint 1: You will need to think about how to manage the state of the input element\n//in InputArea.jsx.\n//Hint 2: You will need to think about how to pass the input value back into\n//the addItem() function in App.jsx.\n"],"sourceRoot":""}